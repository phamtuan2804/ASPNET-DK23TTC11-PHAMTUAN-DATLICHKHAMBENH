// <auto-generated />
using System;
using HEALTHCARE.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HEALTHCARE.Migrations
{
    [DbContext(typeof(HealthCareDbContext))]
    [Migration("20250511102553_UpdateDateTimeColumnsToDateTime2Properly")]
    partial class UpdateDateTimeColumnsToDateTime2Properly
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HEALTHCARE.Models.BacSi", b =>
                {
                    b.Property<int>("MaBacSi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaBacSi"));

                    b.Property<string>("ChuyenKhoa")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("HinhAnh")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MoTa")
                        .HasColumnType("TEXT");

                    b.Property<string>("TenBacSi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ThoiGianCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianTao")
                        .HasColumnType("datetime2");

                    b.HasKey("MaBacSi");

                    b.ToTable("BacSi", (string)null);
                });

            modelBuilder.Entity("HEALTHCARE.Models.DichVu", b =>
                {
                    b.Property<int>("MaDichVu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDichVu"));

                    b.Property<decimal?>("Gia")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("MoTa")
                        .HasColumnType("TEXT");

                    b.Property<string>("TenDichVu")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ThoiGianCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianTao")
                        .HasColumnType("datetime2");

                    b.HasKey("MaDichVu");

                    b.ToTable("DichVu", (string)null);
                });

            modelBuilder.Entity("HEALTHCARE.Models.LichHen", b =>
                {
                    b.Property<int>("MaLichHen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLichHen"));

                    b.Property<string>("EmailBenhNhan")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("TEXT");

                    b.Property<int>("MaLichTrinh")
                        .HasColumnType("int");

                    b.Property<string>("SoDienThoaiBenhNhan")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TenBenhNhan")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ThoiGianCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianDatHen")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaLichHen");

                    b.HasIndex("MaLichTrinh");

                    b.ToTable("LichHen", (string)null);
                });

            modelBuilder.Entity("HEALTHCARE.Models.LichTrinh", b =>
                {
                    b.Property<int>("MaLichTrinh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLichTrinh"));

                    b.Property<int>("MaBacSi")
                        .HasColumnType("int");

                    b.Property<int>("MaDichVu")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuongSlotTrong")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGianBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("ThuTrongTuan")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("MaLichTrinh");

                    b.HasIndex("MaBacSi");

                    b.HasIndex("MaDichVu");

                    b.ToTable("LichTrinh", (string)null);
                });

            modelBuilder.Entity("HEALTHCARE.Models.NguoiDung", b =>
                {
                    b.Property<int>("MaNguoiDung")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNguoiDung"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("MatKhauHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ThoiGianCapNhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("VaiTro")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaNguoiDung");

                    b.ToTable("NguoiDung", (string)null);
                });

            modelBuilder.Entity("HEALTHCARE.Models.LichHen", b =>
                {
                    b.HasOne("HEALTHCARE.Models.LichTrinh", "LichTrinh")
                        .WithMany("LichHens")
                        .HasForeignKey("MaLichTrinh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LichTrinh");
                });

            modelBuilder.Entity("HEALTHCARE.Models.LichTrinh", b =>
                {
                    b.HasOne("HEALTHCARE.Models.BacSi", "BacSi")
                        .WithMany("LichTrinhs")
                        .HasForeignKey("MaBacSi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HEALTHCARE.Models.DichVu", "DichVu")
                        .WithMany("LichTrinhs")
                        .HasForeignKey("MaDichVu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BacSi");

                    b.Navigation("DichVu");
                });

            modelBuilder.Entity("HEALTHCARE.Models.BacSi", b =>
                {
                    b.Navigation("LichTrinhs");
                });

            modelBuilder.Entity("HEALTHCARE.Models.DichVu", b =>
                {
                    b.Navigation("LichTrinhs");
                });

            modelBuilder.Entity("HEALTHCARE.Models.LichTrinh", b =>
                {
                    b.Navigation("LichHens");
                });
#pragma warning restore 612, 618
        }
    }
}
